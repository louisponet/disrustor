trigger:
  tags:
    include:
      - 'v*'

  branches:
    include:
      - master

pr:
  branches:
    include:
      - master

jobs:
  - job: lint
    displayName: Lint
    pool:
      vmImage: 'ubuntu-16.04'
    container: rust:latest
    steps:
      - script: rustup component add rustfmt clippy-preview
        displayName: Install
      - script: cargo fmt -- --color=always --check
        displayName: Format
      - script: cargo clippy --color=always --all --all-features
        displayName: Clippy
  
  - job: integrate
    displayName: Integrate
    dependsOn: lint
    strategy:
      matrix:
        windows-stable:
          imageName: 'vs2017-win2016'
          rustup_toolchain: stable
        mac-stable:
          imageName: 'macos-10.13'
          rustup_toolchain: stable
        linux-stable:
          imageName: 'ubuntu-16.04'
          rustup_toolchain: stable
        linux-beta:
          imageName: 'ubuntu-16.04'
          rustup_toolchain: beta
        linux-nightly:
          imageName: 'ubuntu-16.04'
          rustup_toolchain: nightly
    pool:
      vmImage: $(imageName)
    steps:
      - script: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
          echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
        displayName: Install Rust (Unix)
        condition: ne( variables['Agent.OS'], 'Windows_NT' )
      - script: |
          curl -sSf -o rustup-init.exe https://win.rustup.rs
          rustup-init.exe -y --default-toolchain %RUSTUP_TOOLCHAIN%
          echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
        displayName: Install Rust (Windows)
        condition: eq( variables['Agent.OS'], 'Windows_NT' )
      - script: cargo build --all
        displayName: Build
      - script: cargo test --all
        displayName: Test
